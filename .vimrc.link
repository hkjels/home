"
" .vimrc
" ======
"
" __My personal preferences for vim, gvim and mvim.
"
" Worth noting
" ------------
"
" * Uses Neobundle to manage packages
" * Relative line-numbers when not in insert-mode
" * Arrow-keys are remapped to switch between tabs or to move 
"   between conflicts in diff-mode
" * Leader is mapped to space
"
" ### Needs fixing
"
" * Vimexplorer does'nt always open when `:vs dir` is executed
"
" Author: Henrik Kjelsberg <hkjels@me.com> (http://take.no/)
" Version: 0.0.1
"


" NeoBundle ------------------------------------------------------------ {{{
" @see https://github.com/Shougo/neobundle.vim

  set nocompatible                              " Be improved!
  set exrc                                      " Source .exrc files automatically
  set nosecure                                  " Powerful .exrcÂ´s. PS. Kind of dangerous!
  filetype off                                  " Necessary to make NeoBundle happy
  if has('vim_starting')
    set rtp+=~/.vim/bundle/neobundle.vim/       " Path to bundles
  endif
  call neobundle#rc(expand('~/.vim/bundle/'))   " Let NeoBundle do it's magic

  NeoBundleFetch 'Shougo/neobundle.vim'

" }}}


" System --------------------------------------------------------------- {{{

  NeoBundle 'hkjels/natural.vim'
  NeoBundle 'hkjels/language.vim'
  NeoBundle 'hkjels/scm.vim'
  NeoBundle 'Shougo/vimproc.vim', { 'build' : { 'mac' : 'make -f make_mac.mak' } }
  NeoBundle 'mhinz/vim-startify'
  NeoBundle 'sjl/gundo.vim'
  NeoBundle 'Shougo/unite.vim'
  NeoBundle 'h1mesuke/unite-outline'
  NeoBundle 'osyo-manga/unite-quickfix'
  NeoBundle 'thinca/vim-unite-history'
  NeoBundle 'jeffkreeftmeijer/vim-numbertoggle'

  set shell=bash\ --login             " Bring on a familiar environment
  set title                           " Change the terminal's title

  " Unite
  call unite#filters#matcher_default#use(['matcher_fuzzy'])
  let g:unite_enable_start_insert=1
  let g:unite_source_file_mru_limit=200
  let s:unite_affects='file,file/new,buffer,file_rec,file_rec/async'
  let s:unite_ignore='/\(pear\|thrift\|gen\|.git\|.DS_Store\|components\|node_modules\|.jpg\|.png\)/'
  call unite#custom#source(s:unite_affects, 'ignore_pattern', s:unite_ignore)

  " Silver-searcher
  if executable('ag')
    let g:unite_source_grep_command='ag'
  " Ack-grep
  elseif executable('ack')
    let g:unite_source_grep_command='ack'
  endif
  let g:unite_source_grep_default_opts='--nogroup --nocolor --column --smart-case'
  let g:unite_source_grep_recursive_opt=''

  " Pager
  let vimpager_disable_x11=1

  " Create missing directories upon save
  autocmd BufWritePre * if expand("<afile>")!~#'^\w\+:/' && !isdirectory(expand('%:h')) | call mkdir(expand('%:h'), 'p') | endif

" }}}


" Git ------------------------------------------------------------------ {{{

  NeoBundle 'mattn/gist-vim', { 'depends': ['mattn/webapi-vim'] }   " Publish to gist

  " Gist
  let g:gist_clip_command='pbcopy'
  let g:gist_detect_filetype=2
  let g:gist_show_privates=1

  " Gitv
  let g:Gitv_TruncateCommitSubjects=1

" }}}


" Navigation ----------------------------------------------------------- {{{

  NeoBundle 'Lokaltog/vim-easymotion'
  NeoBundle 'kshenoy/vim-signature'
  NeoBundle 'Shougo/vimfiler.vim', {
    \   'depends': ['Shougo/unite.vim'],
    \   'autoload': {
    \     'ignore_pattern': '^\%(.git\|.DS_Store\)$'
    \   }
    \ }
  NeoBundle 'christoomey/vim-tmux-navigator'
  NeoBundle 'othree/eregex.vim'
  NeoBundle 'ivyl/vim-bling'

  let g:vimfiler_as_default_explorer=1

" }}}


" Help ----------------------------------------------------------------- {{{

  NeoBundle 'rizzatti/dash.vim', { 'depends' : ['rizzatti/funcoo.vim'] }

" }}}


" Aesthetics ----------------------------------------------------------- {{{

  NeoBundle 'altercation/vim-colors-solarized'  " Color-scheme
  NeoBundle 'bling/vim-airline'                 " Sexy statusline
  NeoBundle 'edkolev/tmuxline.vim'              " Theme tmux-status like vim-status
  NeoBundle 'chreekat/vim-paren-crosshairs'     " Show crosshair when mouse is over a paren

  syntax enable                       " Enable syntax highlighting
  set background=dark                 " Use dark-theme
  colorscheme solarized               " Color-scheme to use
  let g:airline_powerline_fonts = 1
  let g:tmuxline_preset = 'full'

  " Highlight VCS conflicts
  match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

" }}}


" Editing -------------------------------------------------------------- {{{

  NeoBundle 'hlissner/vim-multiedit'      " Edit using multiple cursors
  NeoBundle 'Raimondi/delimitMate'        " Add end-delimiters
  NeoBundle 'tpope/vim-commentary'        " Quickly comment/un-comment
  NeoBundle 'tpope/vim-endwise'           " Adds ending to block
  NeoBundle 'tpope/vim-ragtag'            " Simplify xml editing
  NeoBundle 'tpope/vim-speeddating'       " Quick incrementation of a variety of values
  NeoBundle 'tpope/vim-surround'          " Surround text with specified delimiter
  NeoBundle 'tpope/vim-unimpaired'        " Quick navigation shortcuts
  NeoBundle 'tpope/vim-repeat'            " Repeat plugin commands with `.`
  NeoBundle 'tsaleh/vim-align'            " Align by whitespace
  NeoBundle 'matze/vim-move'              " Move lines Up/Down

  " C completion
  let g:marching_clang_command="/usr/bin/clang"
  let g:marching_enable_neocomplete=1
  let g:marching_clang_command_option="-std=c++1y"

  " Default tabsize
  set tabstop=2                 " Number of spaces a tab counts for
  set shiftwidth=2              " Width to shift on indent operations
  set expandtab                 " Use space instead of tabs in insert-mode
  set smarttab                  " Insert blanks according to shiftwidth in start of lines

  " Syntastic
  set laststatus=2
  let g:syntastic_enable_signs=1
  let g:syntastic_auto_jump=0

" }}}


" Tags ----------------------------------------------------------------- {{{

  set tags=.git/tags  " Store tags with each project

" }}}


" Folds ---------------------------------------------------------------- {{{

  set foldmethod=indent
  set foldnestmax=3
  set nofoldenable

" }}}


" Key-mappings --------------------------------------------------------- {{{

  " Change leader
  let g:mapleader=" "
  let g:maplocalleader="\\"

  " Sudo like a boss
  cmap w!! w !sudo tee % >/dev/null
  cmap x!! x !sudo tee % >/dev/null

  " Quick-open directory in a new buffer
  nmap <leader>e :e <c-r>=expand('%:h').'/'<cr><cr>
  nmap <leader>sp :sp <c-r>=expand('%:h').'/'<cr><cr>
  nmap <leader>vs :vs <c-r>=expand('%:h').'/'<cr><cr>
  nmap <leader>t :tabe <c-r>=expand('%:h').'/'<cr><cr>

  " Prevent the use of arrow-keys as screen-navigation
  map <up> <nop>
  map <down> <nop>
  map <left> <nop>
  map <right> <nop>
  inoremap <left>  <nop>
  inoremap <right> <nop>
  inoremap <up>    <nop>
  inoremap <down>  <nop>

  " Tab switching
  nnoremap <right> :tabnext<cr>
  nnoremap <left> :tabprevious<cr>

  " Jump to colorcolumn
  map <leader>c :call cursor(line("."), &colorcolumn)<cr>

  " Quick-edit .vimrc
  nmap <leader>vim :e ~/.vimrc<cr>

  " Completion
  imap <buffer> <C-x><C-o> <Plug>(marching_start_omni_complete)

  " Moving code
  let g:move_map_keys=0
  vmap <up> <Plug>MoveBlockUp
  vmap <down> <Plug>MoveBlockDown
  nmap <up> <Plug>MoveLineUp
  nmap <down> <Plug>MoveLineDown

  " Unite mappings
  au FileType unite call s:UniteMappings()
  fun! s:UniteMappings()
    noremap <buffer><silent><expr> E unite#do_action('vsplit')
  endfun
  nnoremap <c-p>      :Unite -buffer-name=files file_rec/async:!<cr>
  nnoremap <c-y>      :Unite -buffer-name=history history/yank:!<cr>
  nnoremap <leader>b  :Unite -buffer-name=buffers buffer:!<cr>
  nnoremap <leader>o  :Unite -buffer-name=outline outline<cr>
  nnoremap <leader>/  :Unite -buffer-name=search -no-quit grep:.<cr>

  " Relative/absolute line-numbers
  if exists('NumberToggle')
    nnoremap <leader>n :call NumberToggle()<cr>
  endif

  " Clipper
  nnoremap <leader>y :call system('nc localhost 8377', @0)<CR>

  " Speeddating - quick date/number manipulation
  let g:speeddating_no_mappings=1
  nmap  +     <Plug>SpeedDatingUp
  nmap  -     <Plug>SpeedDatingDown
  xmap  +     <Plug>SpeedDatingUp
  xmap  -     <Plug>SpeedDatingDown
  nmap d+     <Plug>SpeedDatingNowUTC
  nmap d-     <Plug>SpeedDatingNowLocal

  " EasyMotion
  let g:EasyMotion_leader_key='<leader><leader>'

" }}}


" Load additional preferences ------------------------------------------ {{{

  let s:vimrc_local=expand('~/vimrc.local')
  if filereadable(s:vimrc_local)
    source s:vimrc_local
  endif
  autocmd VimEnter * NeoBundleCheck

" }}}

