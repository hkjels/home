
"
" .vimrc
"
" Author: Henrik Kjelsberg (https://github.com/hkjels/)
" Version: 0.1.0
" License: MIT
"

" NeoBundle initialization---------------------------------------------- {{{
  if has('vim_starting')
    set nocompatible
    set runtimepath+=~/.vim/bundle/neobundle.vim
  endif
  call neobundle#rc(expand('~/.vim/bundle'))
  NeoBundleFetch 'Shougo/neobundle.vim'
" }}}

" Bundle dependencies -------------------------------------------------- {{{
  NeoBundle 'hkjels/natural.vim'                  " Sane defaults
  NeoBundle 'hkjels/aestetics.vim', {'force': 1}  " All things color
  NeoBundle 'hkjels/united.vim', {'force': 1}     " Bundle of unite-interfaces
  NeoBundle 'hkjels/language.vim', {'force': 1}   " Syntax/Check/Completion etc
  NeoBundle 'hkjels/scm.vim', {'force': 1}        " Source control
  NeoBundle 'jeffkreeftmeijer/vim-numbertoggle'   " Toggle between relative/absolute line-numbers
  NeoBundle 'Lokaltog/vim-easymotion'             " Jump to character with visual-aid
  NeoBundle 'kshenoy/vim-signature'               " Displays marks in a gutter
  NeoBundle 'christoomey/vim-tmux-navigator'      " Easy navigation between tmux <-> vim
  NeoBundle 'tpope/vim-unimpaired'                " Quick navigation shortcuts
  NeoBundle 'tpope/vim-repeat'                    " Repeat plugin commands with `.`
  NeoBundleLazy 'sjl/gundo.vim', {
    \   'autoload': {'commands': [{'name': 'GundoToggle'}]},
    \ }                                           " Tree overview of undo´s
  NeoBundleLazy 'Shougo/vim-vcs', {
    \   'depends' : 'thinca/vim-openbuf',
    \   'autoload' : {'commands' : 'Vcs'},
    \ }                                           " Source control management
" }}}

  " TODO Move to `language.vim`

  autocmd BufNewFile,BufRead *.{mcss,css} setlocal filetype=css
  autocmd FileType help setlocal textwidth=0

" Override defaults ---------------------------------------------------- {{{
  set tabstop=2                 " Number of spaces a tab counts for
  set shiftwidth=2              " Width to shift on indent operations
  set expandtab                 " Use space instead of tabs in insert-mode
  set smarttab                  " Insert blanks according to shiftwidth in start of lines
  set tags=.git/tags            " Store tags with each project
  set foldmethod=indent         " Fold by indentation-level
  set foldnestmax=3             " Number of nested folds
  set nofoldenable              " Don´t fold when opening files
  set keywordprg=:help          " Command to execute with `K`

  " Change leader
  let g:mapleader=" "
  let g:maplocalleader="\\"

  " Quick-open directory in a new buffer
  nmap <leader>e :e <c-r>=expand('%:h').'/'<cr><cr>
  nmap <leader>sp :sp <c-r>=expand('%:h').'/'<cr><cr>
  nmap <leader>vs :vs <c-r>=expand('%:h').'/'<cr><cr>
  nmap <leader>t :tabe <c-r>=expand('%:h').'/'<cr><cr>

  " Prevent the use of arrow-keys as screen-navigation
  map <up> <nop>
  map <down> <nop>
  map <left> <nop>
  map <right> <nop>
  inoremap <left>  <nop>
  inoremap <right> <nop>
  inoremap <up>    <nop>
  inoremap <down>  <nop>

  " Tab switching
  nnoremap <right> :tabnext<cr>
  nnoremap <left> :tabprevious<cr>

  " Invert colorshcheme
  map <leader>c :InvertColorScheme<cr>

  " Search/replace word below cursor
  nnoremap <expr> s* ':%substitute/\<' . expand('<cword>') . '\>/'

  " Relative/absolute line-numbers
  nnoremap <leader>n :call NumberToggle()<cr>

  " Gundo
  nnoremap <Leader>g :<C-u>GundoToggle<CR>

  " History
  nnoremap <leader>h :Unite history<cr>

  " Help
  nnoremap <leader>H    :<C-u>Unite -buffer-name=help help<cr>
  nnoremap <leader> *H  :<C-u>UniteWithCursorWord help<CR>

" }}}

" NeoBundle verification ----------------------------------------------- {{{
  NeoBundleCheck
  if !has('vim_starting')
    call neobundle#call_hook('on_source')
  endif
" }}}

