* Git

These are global git-configurations that people most often set using
~git config --global~. Since those would be overwritten upon tangling
this document, I advise against it. Use ~git config --(system|local)~ or
manually add to ~~/.gitconfig.local~ instead.

** Custom functionality

*** Words diff

Will get the number of words that's been changed. This is useful if
you use a service like ex. Crowdin for translations, where they charge
for number of words translated.
#+begin_src shell :tangle ~/bin/git-words-diff :tangle-mode (identity #o755)
#!/bin/sh
set -euo pipefail

function usage {
  cat << EOT

  Usage: git words-diff [options] [<commit>] [--] [<path>...]

  Options:

    -h, --help     output usage information

EOT
}

function git_words_added {
    git diff --word-diff=porcelain "$@" | grep -e "^+[^+]" | wc -w | xargs
}

function git_words_removed {
    git diff --word-diff=porcelain "$@" | grep -e "^-[^-]" | wc -w | xargs
}

function git_words_diff {
    echo $(($(git_words_added "$@") - $(git_words_removed "$@")))
}

while test $# -ne 0; do
  arg=$1; shift
  case $arg in
    -h|--help)
      usage
      exit 0
      ;;
    ,*)
      echo "Words added:   $(git_words_added $arg $@)"
      echo "Words removed: $(git_words_removed $arg $@)"
      echo "Sum:           $(git_words_diff $arg $@)"
      break;
      ;;
  esac
done
#+end_src

*** Who am I

Run ~git whoami~ to see what's your user local to the repository you're in.
#+begin_src shell :tangle ~/bin/git-whoami :tangle-mode (identity #o755)
#!/bin/sh

# git-whoami
# Author: Peter Eisentraut <peter@eisentraut.org>
# Created: 2011-10-27
# License: WTFPL; see http://sam.zoy.org/wtfpl/

# exact logic in ident.c in git source tree

set -e

get_email() {
	git config user.email || ( [ -n "$EMAIL" ] && echo "$EMAIL" ) || echo "$(id -nu)@$(hostname --fqdn)"
}

get_name() {
	git config user.name || getent passwd $(id -un) | cut -d : -f 5 | cut -d , -f 1
}

: ${GIT_AUTHOR_NAME=$(get_name)}
: ${GIT_COMMITTER_NAME=$(get_name)}
: ${GIT_AUTHOR_EMAIL=$(get_email)}
: ${GIT_COMMITTER_EMAIL=$(get_email)}

author="$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
commit="$GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL>"

if [ "$author" = "$commit" ]; then
	echo "$author"
else
	echo "Author: $author"
	echo "Commit: $commit"
fi
#+end_src

** Core
#+name: core
| commitGraph | true         |


** Alias
#+name: alias
| amm          | commit -v --amend --no-edit                                                                                                 |
| appraise     | !git-appraise                                                                                                               |
| authors      | shortlog -sn                                                                                                                |
| br           | branch                                                                                                                      |
| bra          | branch -a                                                                                                                   |
| cb           | checkout -b                                                                                                                 |
| ci           | commit -v                                                                                                                   |
| cl           | clone --recursive                                                                                                           |
| clone        | clone --recursive                                                                                                           |
| co           | checkout                                                                                                                    |
| cp           | !git rev-parse HEAD ¦ tr -d "\\r" ¦ pbcopy                                                                                  |
| create-graph | commit-graph write --reachable                                                                                              |
| ctags        | !.git/hooks/ctags                                                                                                           |
| d            | diff --word-diff                                                                                                            |
| f            | !git-fresh                                                                                                                  |
| g            | grep --break --heading --line-number                                                                                        |
| ignored      | check-ignore -v                                                                                                             |
| lc           | show -s --format="%ct" HEAD                                                                                                 |
| lg           | log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit |
| ls           | ls-files                                                                                                                    |
| m            | merge                                                                                                                       |
| mt           | mergetool                                                                                                                   |
| mysprint     | log --since 1.week --author "$(git config user.name)"                                                                       |
| next         | !git add -A; git rebase --continue                                                                                          |
| p            | pull                                                                                                                        |
| perfect      | rebase -i @{u}                                                                                                              |
| pf           | push --force-with-lease                                                                                                     |
| pr           | pull-request                                                                                                                |
| rb           | rebase                                                                                                                      |
| rba          | rebase --abort                                                                                                              |
| rbc          | rebase --continue                                                                                                           |
| rbi          | rebase -i origin/master                                                                                                     |
| remotes      | remote -v                                                                                                                   |
| rm           | remove-commit                                                                                                               |
| rm-r         | push origin --delete                                                                                                        |
| root         | !pwd                                                                                                                        |
| s            | status -sb                                                                                                                  |
| sa           | submodule add                                                                                                               |
| sci          | dcommit -v                                                                                                                  |
| sf           | submodule foreach                                                                                                           |
| sh           | !git-sh                                                                                                                     |
| sha          | !fcs                                                                                                                        |
| sprint       | log --format "[%an] %s" --since 1.week                                                                                      |
| sr           | submodule remove                                                                                                            |
| st           | stash                                                                                                                       |
| sta          | stash apply                                                                                                                 |
| standup      | log --since "1 day ago" --oneline --author "$(git config user.name)"                                                        |
| std          | stash drop                                                                                                                  |
| stls         | stash list                                                                                                                  |
| stp          | stash pop                                                                                                                   |
| sts          | stash save                                                                                                                  |
| stu          | stash unstaged                                                                                                              |
| tags         | tag -l                                                                                                                      |
| today        | log --since 7am                                                                                                             |
| undo         | reset --soft HEAD^                                                                                                          |
| unstage      | reset HEAD --                                                                                                               |
| update       | pull --rebase                                                                                                               |


** Color
#+name: color
| ui     | true  |
| branch | auto  |
| diff   | auto  |
| status | auto  |


** Credential
#+name: credential
| helper | osxkeychain |


** Status
#+name: status
| showUntrackedFiles | all |


** Diff
#+name: diff
| mnemonicprefix | true      |
| algorithm      | histogram |

#+name: diff-clojure
| xfuncname | (^\\(.* ¦ \\s*\\(defn.*) |

#+name: diff-rust
| xfuncname | '^[ \t]*(pub¦)[ \t]*((fn¦struct¦enum¦impl¦trait¦mod)[^;]*)$' |


** Push
#+name: push
| default    | current |
| followTags | true    |


** Pull
#+name: pull
| rebase | true  |


** Commit
#+name: commit
| gpgSign | true |


** Fetch
#+name: fetch
| writeCommitGraph | true |


** GC
#+name: gc
| auto             |    1 |
| writeCommitGraph | true |


** Branch
#+name: branch
| autosetuprebase | always |


** Grep
#+name: grep
| extendRegexp | true |
| lineNumber   | true |


** Filters
#+name: filter-media
| clean    | git media clean %f  |
| smudge   | git media smudge %f |
| required | true                |

#+name: filter-lfs
| clean    | git-lfs clean -- %f    |
| smudge   | git-lfs smudge -- %f   |
| required | true                   |
| process  | git-lfs filter-process |


** Magit
#+name: magit
| hideCampaign | true |


** Apply
#+name: apply
| whitespace | nowarn |


** Merge
#+name: merge
| conflictstyle | diff3 |


** Transfer
We validate objects and their connection to commits before
transferring.
#+name: transfer
| fsckObjects | true |

** Include
We use a separate file for configurations that should not be pushed to
a remote. Could be for security purposes.
#+name: include
| path | ~/.gitconfig.local |


** Conversion to code                                                 :noexport:

#+name: key-val
#+begin_src emacs-lisp :var vals=alias
(replace-regexp-in-string "¦" "|" (message "%s" (mapconcat 'identity (mapcar (lambda (m) (format "%s = %s" (car m) (car (cdr m)))) vals) "\n")))
#+end_src

#+begin_src ini :tangle ~/.gitconfig :noweb yes :tangle-mode (identity #o444)
;; <<license>>

[core]
  <<key-val(core)>>

[alias]
  <<key-val(alias)>>

[color]
  <<key-val(color)>>

[status]
  <<key-val(status)>>

[credential]
  <<key-val(credential)>>

[merge]
  <<key-val(merge)>>

[diff]
  <<key-val(diff)>>

[diff "clojure"]
<<key-val(diff-clojure)>>

[diff "rust"]
<<key-val(diff-rust)>>

[push]
  <<key-val(push)>>

[pull]
  <<key-val(push)>>

[commit]
  <<key-val(commit)>>

[fetch]
  <<key-val(fetch)>>

[gc]
  <<key-val(gc)>>

[branch]
  <<key-val(branch)>>

[grep]
<<key-val(grep)>>

[filter "media"]
<<key-val(filter-media)>>

[filter "lfs"]
<<key-val(filter-lfs)>>

[magit]
<<key-val(magit)>>

[transfer]
<<key-val(transfer)>>

[include]
<<key-val(include)>>
#+end_src
